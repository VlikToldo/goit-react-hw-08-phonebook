{"version":3,"file":"static/js/248.3ceefa91.chunk.js","mappings":"0OACA,EAA0B,8BAA1B,EAAmE,+BAAnE,EAA8G,gCCI9G,EALqB,CACjBA,KAAM,GACNC,OAAQ,I,UCARC,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACR,EACDyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOxB,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAInD,MAAQ,WAAa,YAAcmD,CAC1F,IAAEG,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGH,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASS,EAAsBC,GACpC,IAAK,IAAIC,EAAOlB,UAAUtB,OAAQyC,EAAyB,IAAIX,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKpB,UAAUoB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQtB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMc,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFjB,EAAMiB,GAASvB,UAAUuB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBrC,GAGdsC,EAAatB,EAAMT,MAQvB,GAN0B,kBAAf+B,IACTF,EAAwBE,EAExBA,EAAatB,EAAMT,OAGK,oBAAf+B,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBvB,MAAMC,QAAQkB,GAAkBA,EAAiB,CAACA,GACxEpB,EAAeF,EAAgBC,GAC/B0B,EAAqBf,EAAQhB,WAAM,EAAQ,CAAC,WAG9C,OAFAwB,IAEOG,EAAW3B,MAAM,KAAMD,UAC/B,GAAEiC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACTzD,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1BwD,EAAOC,KAAK7B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAwB,EAAcQ,EAAmB/B,MAAM,KAAMkC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpBzB,aAAcA,EACdgC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,IAAIA,EAAgCL,EAAsBlD,GCjGpD4E,EAAsBrB,EACjC,CALqB,SAAC,GAAD,SAAEsB,SAAuBC,KAAzB,EACF,SAAAC,GAAK,OAAIA,EAAMC,MAAV,IAKxB,SAACH,EAAUG,GACT,IAAKA,EACH,OAAOH,EAET,IAAMI,EAAmBD,EAAOE,cAQhC,OAPeL,EAASG,QAAO,YAAuB,IAApBtF,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACtC,OACED,EAAKwF,cAAcC,SAASF,IAC5BtF,EAAOuF,cAAcC,SAASF,EAEjC,GAGF,I,SCiEH,EA5EoB,WAClB,OAA0BG,EAAAA,EAAAA,WAAS,UAAKC,IAAxC,eAAON,EAAP,KAAcO,EAAd,KACMT,GAAWU,EAAAA,EAAAA,IAAYX,GACvBY,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAEJ,IAgBMI,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdnG,EAAgBmG,EAAhBnG,KAAM0B,EAAUyE,EAAVzE,MAEdkE,GAAS,SAAAQ,GACP,OAAO,kBAAKA,GAAZ,cAAwBpG,EAAO0B,GAChC,GACF,EAYO1B,EAAiBqF,EAAjBrF,KAAMC,EAAWoF,EAAXpF,OAEd,OACE,kBAAMoG,UAAWC,EAAgBC,OAAO,GAAGC,SAbxB,SAAAC,GAEnB,GADAA,EAAEC,iBAzBgB,SAAC1G,EAAMC,GACzB,IAAM0G,EAAiB3G,EAAKwF,cACtBoB,EAAmB3G,EAAOuF,cAC1BqB,EAAS1B,EAASxC,MAAK,YAAuB,IAApB3C,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACpC,OACED,EAAKwF,gBAAkBmB,GACvB1G,EAAOuF,gBAAkBoB,CAE5B,IACD,OAAOE,QAAQD,EAChB,CAgBKE,CAAY/G,EAAMC,GAEpB,OADA+G,MAAM,GAAD,OAAIhH,EAAJ,aAAaC,EAAb,uBACE,GAhBc,SAAC,GAAsB,IAApBD,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAChC6F,GAASmB,EAAAA,EAAAA,IAAgB,CAAEjH,KAAAA,EAAMC,OAAAA,IAClC,CAgBCiH,EAAiB,UAAK7B,IACtBO,GAAS,UAAKD,GACf,EAKC,WACE,iBAAKU,UAAWC,EAAhB,WACE,qCACA,kBACEa,KAAK,OACLnH,KAAK,OACL0B,MAAO1B,EACPoH,SAAUlB,EACVmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,iBAAKlB,UAAWC,EAAhB,WACE,uCACA,kBACEa,KAAK,MACLnH,KAAK,SACL0B,MAAOzB,EACPmH,SAAUlB,EACVmB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQlB,UAAWC,EAAnB,2BAGL,ECnFD,EAA8B,oCAA9B,EAA8E,kCAA9E,EAA8H,oC,UCDjHkB,EAAY,SAAC,GAAD,SAAElC,MAAF,ECuBzB,EAjBsB,WAEpB,IAAMA,GAASO,EAAAA,EAAAA,IAAY2B,GACrB1B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKM,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAlB,oCACA,kBAAOD,UAAWC,EAAoBa,KAAK,OAAOzF,MAAO4D,EAAQtF,KAAK,SAASoH,SAP9D,SAAC,GAAgB,IAAdjB,EAAa,EAAbA,OACtBL,GAAS2B,EAAAA,EAAAA,GAAUtB,EAAOzE,OAC3B,MAQF,ECpBD,GAAgB,aAAe,oCCOzBgG,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAI1H,EAAkB,EAAlBA,OAAQD,EAAU,EAAVA,KAC3B8F,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAIM,UAAWC,EAAAA,KAAf,UACGtG,EADH,KACWC,GACT,mBAAQoG,UAAWC,EAAAA,aAAqBsB,QAAS,kBAPzB,SAAAD,GAC1B7B,GAAS+B,EAAAA,EAAAA,IAAoBF,GAC9B,CAK0DG,CAAoBH,EAA1B,EAA+BR,KAAK,SAArF,sBAKL,EAED,IAEAO,EAAYK,aAAe,CACzB3C,MAAO,IC3BT,MAA8B,kCCc9B,EARoB,WAClB,IAEM4C,GAFWnC,EAAAA,EAAAA,IAAYX,GAEH7B,KAAI,SAAA4E,GAAI,OAAK,SAAC,GAAD,UAA+BA,GAAbA,EAAKN,GAA5B,IAElC,OAAO,eAAItB,UAAWC,EAAf,SAAoC0B,GAC5C,ECZD,GAAgB,WAAa,oCAAoC,QAAU,kCC8B3E,EApBsB,WAClB,IAAM7C,GAAWU,EAAAA,EAAAA,IAAYX,GACvBgD,EAAapB,QAAQ3B,EAASjE,QAEpC,OAAO,iBAAKmF,UAAWC,EAAAA,WAAhB,WACP,iBAAKD,UAAWC,EAAAA,MAAhB,WACE,uCACA,SAAC,EAAD,QAEF,iBAAKD,UAAWC,EAAAA,MAAhB,WACE,sCACA,iBAAKD,UAAWC,EAAAA,QAAhB,WACE,SAAC,EAAD,IACC4B,IAAc,SAAC,EAAD,KACbA,GAAc,mCAIvB,C","sources":["webpack://react-homework-template/./src/components/ContactForm/contact-form.module.css?61ba","components/ContactForm/initialState.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactcForm.jsx","webpack://react-homework-template/./src/components/ContactFilter/contact-filter.module.css?abb0","redux/filter/filter-selectors.js","components/ContactFilter/ContactFilter.jsx","webpack://react-homework-template/./src/components/ContactItem/contact-item.module.css?a8bd","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/contact-list.module.css?7001","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/page/AddNumberPage/add-number-page.module.css?054a","page/AddNumberPage/AddNumberPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"boxForm\":\"contact-form_boxForm__8ANLS\",\"boxInput\":\"contact-form_boxInput__S4cWZ\",\"buttonAdd\":\"contact-form_buttonAdd__eO8+u\"};","const initialState = {\n    name: '',\n    number: '',\n}\n\nexport default initialState;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectContacts = ({contacts}) => contacts.items ;\nconst selectFilter = state => state.filter;\n\n\nexport const getFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.filter(({ name, number }) => {\n      return (\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.toLowerCase().includes(normalizedFilter)\n      );\n    });\n    \n    return result;\n  }\n);\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport styles from './contact-form.module.css';\nimport initialState from './initialState';\n\nimport {fetchContacts, fetchAddContact} from '../../redux/contacts/contacts-operations';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\n\n\nconst ContactForm = () => {\n  const [state, setState] = useState({ ...initialState });\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(()=> {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  const isDublicate = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    const normalizedNumber = number.toLowerCase();\n    const result = contacts.find(({ name, number }) => {\n      return (\n        name.toLowerCase() === normalizedName ||\n        number.toLowerCase() === normalizedNumber\n      );\n    });\n    return Boolean(result);\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    dispatch(fetchAddContact({ name, number }));\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isDublicate(name, number)) {\n      alert(`${name}: ${number} is already ixist`);\n      return false;\n    }\n    handleAddContact({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form className={styles.boxForm} action=\"\" onSubmit={handleSubmit}>\n      <div className={styles.boxInput}>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={styles.boxInput}>\n        <label>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <button className={styles.buttonAdd}>Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"labelFilter\":\"contact-filter_labelFilter__sc0Ax\",\"filterBox\":\"contact-filter_filterBox__A6U9E\",\"inputFilter\":\"contact-filter_inputFilter__At9Wg\"};","export const getFilter = ({filter})=> filter;","import { useSelector, useDispatch } from 'react-redux';\n\nimport styles from './contact-filter.module.css';\nimport {setFilter} from '../../redux/filter/filter-slice';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nconst ContactFilter = () => {\n\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className={styles.filterBox}>\n      <label className={styles.labelFilter}>Find contacts bu name</label>\n      <input className={styles.inputFilter} type=\"text\" value={filter} name=\"filter\" onChange={handleFilter} />\n    </div>\n  );\n};\n\nexport default ContactFilter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonRemove\":\"contact-item_buttonRemove__CCUAx\"};","import { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { fetchDeleteContacts } from 'redux/contacts/contacts-operations';\n\nimport styles from './contact-item.module.css';\n\nconst ContactItem = ({ id, number, name}) => {\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = id => {\n    dispatch(fetchDeleteContacts(id));\n  };\n\n  return (\n    <li className={styles.item}>\n      {name}: {number}\n      <button className={styles.buttonRemove} onClick={() => handleRemoveContact(id)} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.defaultProps = {\n  items: [],\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"contact-list_contactList__5myvw\",\"buttonRemove\":\"contact-list_buttonRemove__LQVwE\"};","import { useSelector } from 'react-redux';\n\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport ContactItem from '../ContactItem/ContactItem';\n\nimport styles from './contact-list.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n\n  const elements = contacts.map(item => (<ContactItem key={item.id} {...item} />));\n\n  return <ol className={styles.contactList}>{elements}</ol>;\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactBox\":\"add-number-page_contactBox__woS8t\",\"listBox\":\"add-number-page_listBox__ap5UH\"};","import { useSelector} from 'react-redux';\n\n\nimport ContactForm from '../../components/ContactForm/ContactcForm';\nimport ContactFilter from '../../components/ContactFilter/ContactFilter';\nimport ContactList from '../../components/ContactList/ContactList';\n\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\n\nimport styles from './add-number-page.module.css';\n\nconst AddNumberPage = () => {\n    const contacts = useSelector(getFilteredContacts);\n    const isContacts = Boolean(contacts.length);\n\n    return <div className={styles.contactBox}>\n    <div className={styles.block}>\n      <h3>Pnonebook</h3>\n      <ContactForm />\n    </div>\n    <div className={styles.block}>\n      <h3>Contacts</h3>\n      <div className={styles.listBox}>\n        <ContactFilter />\n        {isContacts && <ContactList />}\n        {!isContacts && 'You dont have a contacts'}\n      </div>\n    </div>\n  </div>\n}\n\nexport default AddNumberPage;"],"names":["name","number","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getFilteredContacts","contacts","items","state","filter","normalizedFilter","toLowerCase","includes","useState","initialState","setState","useSelector","dispatch","useDispatch","useEffect","fetchContacts","handleChange","target","prevState","className","styles","action","onSubmit","e","preventDefault","normalizedName","normalizedNumber","result","Boolean","isDublicate","alert","fetchAddContact","handleAddContact","type","onChange","pattern","title","required","getFilter","setFilter","ContactItem","id","onClick","fetchDeleteContacts","handleRemoveContact","defaultProps","elements","item","isContacts"],"sourceRoot":""}