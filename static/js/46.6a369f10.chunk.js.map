{"version":3,"file":"static/js/46.6a369f10.chunk.js","mappings":"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","sources":["components/RegisterForm/fields.js","components/RegisterForm/initialState.js","webpack://react-homework-template/./src/components/RegisterForm/register-form.module.css?a013","components/RegisterForm/RegisterForm.jsx","page/RegisterPage/RegisterPage.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/shared/TextField/text-field.module.css?f539","shared/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/shared/components/Button/button.module.css?dd0a","shared/components/Button/Button.jsx","shared/hooks/useForm.js"],"sourcesContent":["const fields = {\n    name: {\n        type: \"text\",\n        name: \"name\",\n        required: true,\n        label: \"User name\",\n        placeholder: \"User name\"\n    },\n    email: {\n        type: \"text\",\n        name: \"email\",\n        required: true,\n        label: \"User email\",\n        placeholder: \"User email\"\n    },\n    password: {\n        type: \"text\",\n        name: \"password\",\n        required: true,\n        label: \"User password\",\n        placeholder: \"User password\"\n    }\n}\n\nexport default fields;","const initialState = {\n    name: '',\n    email: '',\n    password: ''\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"register-form_form__AtyVK\"};","import TextField from 'shared/TextField/TextField';\nimport Button from 'shared/components/Button/Button';\n\nimport { useDispatch } from 'react-redux';\nimport useForm from 'shared/hooks/useForm';\n\nimport fields from './fields';\nimport initialState from './initialState';\n\nimport style from './register-form.module.css';\nimport { signup } from 'redux/auth/auth-operations';\n\nconst RegisterForm = () => {\n\n  const dispatch = useDispatch();\n\n  const handleAuth = data => {\n    dispatch(signup(data));\n  };\n\n  const { state, handleChange, handleSubmit } = useForm({ initialState, handleAuth });\n  const { name, email, password } = state;\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={style.form}>\n        <h3>Register</h3>\n        <TextField value={name} handleChange={handleChange} {...fields.name} />\n        <TextField value={email} handleChange={handleChange} {...fields.email} />\n        <TextField value={password} handleChange={handleChange} {...fields.password} />\n        <Button>Register</Button>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <div>\n        <RegisterForm />\n      </div>\n    </>\n  );\n};\n\nexport default RegisterPage;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"formBox\":\"text-field_formBox__sLU1N\",\"field\":\"text-field_field__0xPaa\"};","import { useMemo } from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport style from './text-field.module.css';\n\nconst TextField = ({label, handleChange, ...props}) => {\n    const id = useMemo(()=> nanoid(), [])\n\n    return (\n        <div className={style.formBox}>\n            <label htmlFor={id}>{label}</label>\n            <input className={style.field} id={id} onChange={handleChange} {...props} />\n        </div>\n    )\n}\n\nexport default TextField;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__aZIRC\"};","import style from \"./button.module.css\"\n\nconst Button = ({children, type = 'submit'}) => {\n    return <button type={type} className={style.btn}>{children}</button>\n}\n\nexport default Button;","import { useState, useCallback } from \"react\";\n\nconst useForm = ({initialState, handleAuth})=> {\n    const [state, setState] = useState({...initialState})\n\n    const handleChange = useCallback(({target}) => {\n        const {name, value} = target;\n        setState(prevState => {\n            return {...prevState, [name]: value}\n        })\n    }, [setState]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        handleAuth({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;"],"names":["name","type","required","label","placeholder","email","password","dispatch","useDispatch","useForm","initialState","handleAuth","data","signup","state","handleChange","handleSubmit","onSubmit","className","style","TextField","value","fields","Button","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","children","useState","setState","useCallback","prevState","e","preventDefault"],"sourceRoot":""}